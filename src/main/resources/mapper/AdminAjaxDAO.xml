<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.app.domain.AdminAjaxDAO">


	<!-- 장소 글 목록 (페이징) : page, pageRows -->
	<select id="selectPlaceRow" 
		resultType="com.spring.app.domain.PlaceDTO">
		<![CDATA[  
		SELECT
			place_uid, 
			title, 
			contentId,
			mapx, 
			mapy, 
			addr1,
			tel,
			firstimage2
		FROM 
			(SELECT ROWNUM AS RNUM, T.* FROM 
				(SELECT * FROM place WHERE contentTypeId = #{contentTypeId} ORDER BY place_uid) T) 
		WHERE 
			RNUM >= #{from} AND RNUM < (#{from} + #{pageRows})
		]]>	
	</select>

	<!-- 장소 글 목록 (페이징) 검색 : page, pageRows -->
	<select id="selectSearchPlaceRow" 
		resultType="com.spring.app.domain.PlaceDTO">
		<![CDATA[  
		SELECT * 
		FROM 
			(SELECT ROWNUM AS RNUM, T.* 
			FROM 
			(SELECT *
				FROM place 
				WHERE title LIKE '%' || #{keyword} || '%' AND contenttypeid = #{contentTypeId} 
				ORDER BY title ASC
			) T) 
		WHERE 
			RNUM >= #{from} AND RNUM < (#{from} + #{pageRows})
		]]>	
	</select>
	
	<!-- 일정 게시판 글 목록 (페이징) : page, pageRows -->
	<select id="selectCalenderRow" 
		resultType="com.spring.app.domain.CalenderDTO">
		<![CDATA[  
		SELECT
			tu_uid, 
			us_uid, 
			tu_title,
			tu_hits, 
			tu_period, 
			tu_write_date,
			tu_start_tour,
			tu_del_ck
		FROM 
			(SELECT ROWNUM AS RNUM, T.* FROM 
				(SELECT * FROM tour ORDER BY tu_uid) T) 
		WHERE 
			RNUM >= #{from} AND RNUM < (#{from} + #{pageRows})
		]]>	
	</select>

	<!-- 일정 게시판 글 목록 (페이징) : page, pageRows -->
	<select id="selectSearchCalenderRow" 
		resultType="com.spring.app.domain.CalenderDTO">
		<![CDATA[  
		SELECT
			tu_uid, 
			us_uid, 
			tu_title,
			tu_hits, 
			tu_period, 
			tu_write_date,
			tu_start_tour,
			tu_del_ck
		FROM 
			(SELECT ROWNUM AS RNUM, T.* FROM 
				(SELECT * FROM tour  WHERE tu_title LIKE '%' || #{keyword} || '%' ORDER BY tu_uid) T) 
		WHERE 
			RNUM >= #{from} AND RNUM < (#{from} + #{pageRows})
		]]>	
	</select>

	<!-- 일정 게시판 글 목록 (페이징) : page, pageRows -->
	<select id="selectCardsRow" 
		resultType="com.spring.app.domain.CardsDTO">
		<![CDATA[  
		SELECT
			pc_uid "uid", 
			us_uid usuid, 
			pc_hits hits,
			pc_location location, 
			pc_focus focus, 
			pc_with withs,
			pc_write_date regDate,
			pc_del_ck delCheck
		FROM 
			(SELECT ROWNUM AS RNUM, T.* FROM 
				(SELECT * FROM picture ORDER BY pc_uid) T) 
		WHERE 
			RNUM >= #{from} AND RNUM < (#{from} + #{pageRows})
		]]>	
	</select>

	<!-- 일정 게시판 글 목록 (페이징) : page, pageRows -->
	<select id="selectSearchCardsRow" 
		resultType="com.spring.app.domain.CardsDTO">
		<![CDATA[  
		SELECT
			pc_uid "uid", 
			us_uid usuid, 
			pc_hits hits,
			pc_location location, 
			pc_focus focus, 
			pc_with withs,
			pc_write_date regDate,
			pc_del_ck delCheck
		FROM 
			(SELECT ROWNUM AS RNUM, T.* FROM 
				(SELECT * FROM picture  WHERE pc_uid LIKE '%' || #{keyword} || '%' ORDER BY pc_uid) T) 
		WHERE 
			RNUM >= #{from} AND RNUM < (#{from} + #{pageRows})
		]]>	
	</select>
	
	<!-- 유저 글 목록 (페이징) : page, pageRows -->
	<select id="selectUsersRow" 
		resultType="com.spring.app.domain.AdminDTO">
		<![CDATA[  
		SELECT
			S1.us_uid, 
			S1.us_id, 
			S1.us_email,
			S1.us_nickName, 
			S1.us_gender, 
			S1.us_birth,
			S1.us_join_date,
			S1.us_exit_date,
			S2.us_authority 
		FROM 
			(SELECT ROWNUM AS RNUM, T.* FROM 
				(SELECT * FROM users ORDER BY us_uid) T) S1 JOIN USER_AUTHORITY S2 ON S1.us_uid = S2.US_UID 
		WHERE 
			RNUM >= #{from} AND RNUM < (#{from} + #{pageRows})
		]]>	
	</select>

	<!-- 유저 글 목록 (페이징) : page, pageRows -->
	<select id="selectSearchUsersRow" 
		resultType="com.spring.app.domain.AdminDTO">
		<![CDATA[  
		SELECT
			us_uid, 
			us_id, 
			us_email,
			us_nickName, 
			us_gender, 
			us_birth,
			us_join_date,
			us_exit_date
		FROM 
			(SELECT ROWNUM AS RNUM, T.* FROM 
				(SELECT * FROM users WHERE us_id LIKE '%' || #{keyword} || '%' ORDER BY us_uid) T) 
		WHERE 
			RNUM >= #{from} AND RNUM < (#{from} + #{pageRows})
		]]>	
	</select>

	<!-- SELECT 쿼리문인데, 단일값 int 값 받고 싶으면 어쩌나?
 	resultType="java.lang.Integer" 혹은 resultType="int" 
	-->
	<select id="placeCountAll" resultType="int">
		SELECT count(*) FROM place WHERE contentTypeId = #{contentTypeId}
	</select>	
	
	<select id="calenderCountAll" resultType="int">
		SELECT count(*) FROM tour
	</select>	

	<select id="calenderSearchCountAll" resultType="int">
		SELECT count(*) FROM tour
		WHERE tu_title LIKE '%' || #{keyword} || '%'
	</select>	

	<select id="CardsCountAll" resultType="int">
		SELECT count(*) FROM picture
	</select>	

	<select id="UsersCountAll" resultType="int">
		SELECT count(*) FROM users
	</select>	

	<select id="UsersSearchCountAll" resultType="int">
		SELECT count(*) FROM users
		WHERE us_id LIKE '%' || #{keyword} || '%'
	</select>	

	<select id="placeSearchCountAll" resultType="int">
		SELECT count(*) FROM place
		WHERE title LIKE '%' || #{keyword} || '%' AND contentTypeId = #{contentTypeId}
	</select>	

	<!-- /updateOk.ajax : 글 수정
		parameter: DTO
	 -->	
 	<update id="update" flushCache="true">
		UPDATE test_write 
		SET wr_subject = #{subject}, wr_content = #{content} 
		WHERE wr_uid = #{uid}
	</update>

 	<!-- 배열을 파라미터로 받는 경우
 		collection : 전달받은 인자값 이름(변수 이름)
 			* 배열을 파라미터로 받을때 collection 에 꼭! array 로!!
		item : foreach 문 안에서 사용할 매개변수 이름
		separator : foreach 문이 한번 돌고 다음번 돌때의 구분자
		open : 시작 문자열
		close : 종료 문자열					
 	 -->
 	 
	<update id="deleteCalenderByUid" flushCache="true"
 	  	parameterType="java.util.ArrayList">
 	  	
	 	  	UPDATE tour
	 	  	SET tu_del_ck = 0
	 	  	WHERE tu_uid IN( 
	 	  	<foreach collection="array" item="item" index="index" separator=",">
	 	  	${item}
 	  		</foreach>
 	  		)
 	  </update>
	
	<update id="restoreCalenderByUid" flushCache="true"
 	  	parameterType="java.util.ArrayList">
 	  	
	 	  	UPDATE tour
	 	  	SET tu_del_ck = 1
	 	  	WHERE tu_uid IN( 
	 	  	<foreach collection="array" item="item" index="index" separator=",">
	 	  	${item}
 	  		</foreach>
 	  		)
 	  </update>

	<update id="deleteCardsByUid" flushCache="true"
 	  	parameterType="java.util.ArrayList">
 	  	
	 	  	UPDATE picture
	 	  	SET pc_del_ck = 0
	 	  	WHERE pc_uid IN( 
	 	  	<foreach collection="array" item="item" index="index" separator=",">
	 	  	${item}
 	  		</foreach>
 	  		)
 	  </update>
	
	<update id="restoreCardsByUid" flushCache="true"
 	  	parameterType="java.util.ArrayList">
 	  	
	 	  	UPDATE picture
	 	  	SET pc_del_ck = 1
	 	  	WHERE pc_uid IN( 
	 	  	<foreach collection="array" item="item" index="index" separator=",">
	 	  	${item}
 	  		</foreach>
 	  		)
 	  </update>

	<update id="grantUsersByUid" flushCache="true"
 	  	parameterType="java.util.ArrayList">
 	  	
	 	  	UPDATE user_authority
	 	  	SET us_authority = 0
	 	  	WHERE us_uid IN( 
	 	  	<foreach collection="array" item="item" index="index" separator=",">
	 	  	${item}
 	  		</foreach>
 	  		)
 	  </update>
	
	<update id="revokeUsersByUid" flushCache="true"
 	  	parameterType="java.util.ArrayList">
 	  	
	 	  	UPDATE user_authority
	 	  	SET us_authority = 1
	 	  	WHERE us_uid IN( 
	 	  	<foreach collection="array" item="item" index="index" separator=",">
	 	  	${item}
 	  		</foreach>
 	  		)
 	  </update>
</mapper>