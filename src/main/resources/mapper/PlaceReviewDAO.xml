<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.app.domain.ReviewDAO">

	<select id="reviewCount" resultType="int">
        SELECT COUNT(*) FROM review WHERE place_uid = #{place_uid}
    </select>
    
    <select id="reviewList" resultType="com.spring.app.domain.ReviewDTO">
        <![CDATA[ 
        SELECT  
        	us_uid, place_uid, rv_uid "re_uid", rv_content "content", rv_rate "rate",
        	TO_CHAR(RV_WRITE_DATE, 'RRRR-MM-DD HH24:MI:SS') AS "write_date"
        FROM 
        	(SELECT ROWNUM AS RNUM, T.* FROM 
				(SELECT * FROM review WHERE place_uid = #{place_uid} ORDER BY rv_uid DESC) T) 
		WHERE 
			RNUM >= #{from} AND RNUM < (#{from} + #{pageRows})
        ]]>	
    </select>
    
    <select id="rateAVG" resultType="float">
    	SELECT AVG(rv_rate) AS rateAVG 
    	FROM review 
    	WHERE place_uid = #{place_uid}
    </select>
    
    
    <insert id="reviewInsert" flushCache="true">
        INSERT INTO review
			(us_uid, place_uid, rv_uid, rv_content, rv_rate , rv_write_date)
        VALUES
			(#{us_uid}, #{place_uid}, rv_uid_seq.nextval, #{content}, #{rate}, SYSDATE)
    </insert>
    
    <update id="reviewUpdate" parameterType="com.spring.app.domain.ReviewDTO">
        UPDATE review
        SET rv_content = #{content}
        WHERE rv_uid = #{re_uid}
    </update>
    
    <delete id="reviewDelete" parameterType="com.spring.app.domain.ReviewDTO">
        DELETE FROM review WHERE rv_uid = #{re_uid}
    </delete>
    
    <select id="userList" 
		resultType="com.spring.app.domain.AdminDTO">
		SELECT * 
		FROM users t1 LEFT JOIN USER_AUTHORITY t2 ON (t2.US_UID = t1.US_UID)
		WHERE t1.us_uid = #{us_uid}
	</select>
    
</mapper>